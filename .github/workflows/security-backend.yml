name: Security - Backend
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  security:
    defaults:
      run:
        working-directory: backend
    name: Security Scans (OWASP Dependency Check, SonarQube, Snyk)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        id: Depcheck
        with:
          project: 'Role Mapper'
          path: './backend'
          format: 'HTML'

      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

      - name: Install Snyk
        run: npm install -g snyk

      - name: Setup Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth "$SNYK_TOKEN"
      - run: snyk monitor

      - name: install snyk-to-html
        run: |
          # Install the Snyk JSON to HTML Mapper using npm
          npm install snyk-to-html -g
          # Convert JSON output from `snyk test --json` into a static HTML
          snyk test --json | snyk-to-html -o snyk-result.html
          mkdir downloads
          ls -la
          cp -v snyk-result.html downloads

      - name: Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v4
        with:
          name: snyk-results
          path: ./backend/downloads

      - name: Delete the downloads directory
        run: |
          rm -rf ./downloads
          rm -f ./snyk-result.html

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=FlowCraft-AG_RoleMapper
            -Dsonar.projectName=RoleMapper
            -Dsonar.organization=flowcraft-ag
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=./backend
            -Dsonar.branch.name=${{ github.ref_name }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Scout Quickview
        id: docker-scout-quickview
        uses: docker/scout-action@v1.15.1
        with:
          command: quickview
          image: calebscript/role-mapper:2024.12.1
          summary: false
          write-comment: true        # PR-Kommentar aktivieren
          keep-previous-comments: false # Alte Kommentare aktualisieren statt behalten

      - name: Save Quickview Markdown to File
        run: |
          cat <<EOF > docker-scout-quickview.md
          ${{ steps.docker-scout-quickview.outputs.quickview }}
          EOF

      - name: Upload Docker Scout Quickview Report
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-quickview
          path: backend/docker-scout-quickview.md


      - name: Docker Scout Cves
        id: docker-scout-cves
        uses: docker/scout-action@v1.15.1
        with:
          command: cves
          image: calebscript/role-mapper:2024.12.1
          summary: false
          write-comment: true        # PR-Kommentar aktivieren
          keep-previous-comments: false # Alte Kommentare aktualisieren statt behalten

      - name: Save Cves Markdown to File
        run: |
          cat <<EOF > docker-scout-cves.md
          ${{ steps.docker-scout-cves.outputs.cves }}
          EOF

      - name: Upload Docker Scout Cves Report
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-cves
          path: backend/docker-scout-cves.md
