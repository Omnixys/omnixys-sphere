name: Update Docker Image Tag

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/${{ secrets.SERVICE }}
  NEXT_PUBLIC_BACKEND_SERVER_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_SERVER_URL }}
  NEXT_PUBLIC_DEFAULT_ROUTE: ${{ secrets.NEXT_PUBLIC_DEFAULT_ROUTE }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

  NEXT_PUBLIC_KEYCLOAK_CLIENT_ID: ${{ secrets.KC_SERVICE_CLIENT_ID }}
  NEXT_PUBLIC_KEYCLOAK_CLIENT_SECRET: ${{ secrets.KC_SERVICE_SECRET }}
  NEXT_PUBLIC_KEYCLOAK_ISSUER: http://${{ secrets.KC_SERVICE_HOST }}:${{ secrets.KC_SERVICE_PORT }}/auth/realms/${{ secrets.KC_SERVICE_REALM }}

  NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  docker:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    if: github.actor == 'caleb-script' && github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Print ref name
        run: echo "This workflow was triggered by ${{ github.ref_name }}"

      - name: Print actor
        run: echo "The actor is ${{ github.actor }}"

      - name: Print tag
        run: echo "The tag is ${{ github.ref_name }}"

      - name: Set CURRENT_DATE
        id: set_date
        run: |
          DATE=$(date +'%Y-%m-%d')
          echo "CURRENT_DATE=$DATE" >> $GITHUB_OUTPUT


      - name: Aktualisiere CURRENT_DATE in Organisations-Variable (sicher)
        run: |
            CURRENT_DATE="${{ steps.set_date.outputs.CURRENT_DATE }}"

            if [ -z "$CURRENT_DATE" ]; then
              echo "Fehler: CURRENT_DATE ist leer!"
              exit 1
            fi

            ORG_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f1)

            EXISTING=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/orgs/${ORG_NAME}/actions/variables/CURRENT_DATE \
              | jq -r '.value')

            echo "Updating org-level CURRENT_DATE from $EXISTING to $CURRENT_DATE"

            if [ "$EXISTING" != "$CURRENT_DATE" ]; then
              curl -X PATCH \
                -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
                -H "Accept: application/vnd.github+json" \
                https://api.github.com/orgs/${ORG_NAME}/actions/variables/CURRENT_DATE \
                -d "{\"value\": \"${CURRENT_DATE}\"}"
            else
              echo "CURRENT_DATE ist bereits aktuell: $CURRENT_DATE"
            fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ steps.set_date.outputs.CURRENT_DATE }} \
            --build-arg NEXT_PUBLIC_BACKEND_SERVER_URL=${{ env.NEXT_PUBLIC_BACKEND_SERVER_URL }} \
            --build-arg NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=${{ env.NEXT_PUBLIC_KEYCLOAK_CLIENT_ID }} \
            --build-arg NEXT_PUBLIC_KEYCLOAK_CLIENT_SECRET=${{ env.NEXT_PUBLIC_KEYCLOAK_CLIENT_SECRET }} \
            --build-arg NEXT_PUBLIC_KEYCLOAK_ISSUER=${{ env.NEXT_PUBLIC_KEYCLOAK_ISSUER }} \
            --build-arg NEXT_PUBLIC_DEFAULT_ROUTE=${{ env.NEXT_PUBLIC_DEFAULT_ROUTE }} \
            --build-arg NEXTAUTH_URL=${{ env.NEXTAUTH_URL }} \
            --build-arg NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }} \


      - name: Tag Docker Image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.set_date.outputs.CURRENT_DATE }} ${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.set_date.outputs.CURRENT_DATE }} ${{ env.IMAGE_NAME }}:${{ steps.set_date.outputs.CURRENT_DATE }}

      - name: Push Docker Image
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ steps.set_date.outputs.CURRENT_DATE }}
          docker push ${{ env.IMAGE_NAME }}:latest
